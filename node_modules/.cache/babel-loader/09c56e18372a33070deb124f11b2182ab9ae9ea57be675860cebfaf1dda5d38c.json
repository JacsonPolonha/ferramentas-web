{"ast":null,"code":"var _jsxFileName = \"/home/jacson/ferramentas/src/components/Aside.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AsideContainer = styled.aside`\n  width: 200px;\n  background-color: #f4f4f4;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  padding: 10px;\n`;\n_c = AsideContainer;\nconst CategoryButton = styled.button`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border: none;\n  background-color: ${props => props.active ? \"#aaa\" : \"#ddd\"};\n  transition: background-color 0.3s;\n  font-weight: ${props => props.active ? \"bold\" : \"normal\"};\n\n  &:hover {\n    background-color: #ccc;\n  }\n`;\n_c2 = CategoryButton;\nfunction Aside({\n  selectedCategory,\n  onCategorySelect\n}) {\n  _s();\n  const [categories, setCategories] = useState([\"Todas\"]);\n  useEffect(() => {\n    fetch(\"/db.json\").then(response => response.json()).then(data => {\n      const uniqueCategories = [...new Set(data.map(item => item.category))];\n      setCategories([\"Todas\", ...uniqueCategories]);\n    }).catch(error => console.error(\"Erro ao carregar categorias:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AsideContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filtrar por Categoria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n      onClick: () => onCategorySelect(category),\n      active: selectedCategory === category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Aside, \"Csso29mCr8Up+/2UmLfg69sVp6s=\");\n_c3 = Aside;\nexport default Aside;\n\n// import React, { useEffect, useState } from \"react\";\n\n// function Aside({ selectedCategory, onCategorySelect }) {\n//   const [categories, setCategories] = useState([\"Todas\"]);\n\n//   useEffect(() => {\n//     fetch(\"/db.json\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         const uniqueCategories = [...new Set(data.map((item) => item.category))];\n//         setCategories([\"Todas\", ...uniqueCategories]);\n//       })\n//       .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n//   }, []);\n\n//   return (\n//     <aside>\n//       <nav>\n//         <h3>Filtrar por Categoria</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0 }}>\n//           {categories.map((category) => (\n//             <li key={category} style={{ marginBottom: \"8px\" }}>\n//               <button\n//                 onClick={() => onCategorySelect(category)}\n//                 style={{\n//                   padding: \"8px 12px\",\n//                   width: \"100%\",\n//                   textAlign: \"left\",\n//                   backgroundColor:\n//                     selectedCategory === category ? \"#007BFF\" : \"#f1f1f1\",\n//                   color: selectedCategory === category ? \"#fff\" : \"#000\",\n//                   border: \"none\",\n//                   borderRadius: \"4px\",\n//                   fontWeight: selectedCategory === category ? \"bold\" : \"normal\",\n//                   cursor: \"pointer\",\n//                 }}\n//               >\n//                 {category}\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n//     </aside>\n//   );\n// }\n\n// export default Aside;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AsideContainer\");\n$RefreshReg$(_c2, \"CategoryButton\");\n$RefreshReg$(_c3, \"Aside\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","AsideContainer","aside","_c","CategoryButton","button","props","active","_c2","Aside","selectedCategory","onCategorySelect","_s","categories","setCategories","fetch","then","response","json","data","uniqueCategories","Set","map","item","category","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/home/jacson/ferramentas/src/components/Aside.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst AsideContainer = styled.aside`\n  width: 200px;\n  background-color: #f4f4f4;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  padding: 10px;\n`;\n\nconst CategoryButton = styled.button`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border: none;\n  background-color: ${(props) => (props.active ? \"#aaa\" : \"#ddd\")};\n  transition: background-color 0.3s;\n  font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\n\n  &:hover {\n    background-color: #ccc;\n  }\n`;\n\nfunction Aside({ selectedCategory, onCategorySelect }) {\n  const [categories, setCategories] = useState([\"Todas\"]);\n\n  useEffect(() => {\n    fetch(\"/db.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const uniqueCategories = [...new Set(data.map((item) => item.category))];\n        setCategories([\"Todas\", ...uniqueCategories]);\n      })\n      .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n  }, []);\n\n  return (\n    <AsideContainer>\n      <h3>Filtrar por Categoria</h3>\n      {categories.map((category) => (\n        <CategoryButton\n          key={category}\n          onClick={() => onCategorySelect(category)}\n          active={selectedCategory === category}\n        >\n          {category}\n        </CategoryButton>\n      ))}\n    </AsideContainer>\n  );\n}\n\nexport default Aside;\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n\n// function Aside({ selectedCategory, onCategorySelect }) {\n//   const [categories, setCategories] = useState([\"Todas\"]);\n\n//   useEffect(() => {\n//     fetch(\"/db.json\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         const uniqueCategories = [...new Set(data.map((item) => item.category))];\n//         setCategories([\"Todas\", ...uniqueCategories]);\n//       })\n//       .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n//   }, []);\n\n//   return (\n//     <aside>\n//       <nav>\n//         <h3>Filtrar por Categoria</h3>\n//         <ul style={{ listStyle: \"none\", padding: 0 }}>\n//           {categories.map((category) => (\n//             <li key={category} style={{ marginBottom: \"8px\" }}>\n//               <button\n//                 onClick={() => onCategorySelect(category)}\n//                 style={{\n//                   padding: \"8px 12px\",\n//                   width: \"100%\",\n//                   textAlign: \"left\",\n//                   backgroundColor:\n//                     selectedCategory === category ? \"#007BFF\" : \"#f1f1f1\",\n//                   color: selectedCategory === category ? \"#fff\" : \"#000\",\n//                   border: \"none\",\n//                   borderRadius: \"4px\",\n//                   fontWeight: selectedCategory === category ? \"bold\" : \"normal\",\n//                   cursor: \"pointer\",\n//                 }}\n//               >\n//                 {category}\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n//     </aside>\n//   );\n// }\n\n// export default Aside;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,cAAc;AASpB,MAAMG,cAAc,GAAGN,MAAM,CAACO,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA,sBAAuBC,KAAK,IAAMA,KAAK,CAACC,MAAM,GAAG,MAAM,GAAG,MAAO;AACjE;AACA,iBAAkBD,KAAK,IAAMA,KAAK,CAACC,MAAM,GAAG,MAAM,GAAG,QAAS;AAC9D;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIJ,cAAc;AAepB,SAASK,KAAKA,CAAC;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,gBAAgB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,IAAI,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MACxEV,aAAa,CAAC,CAAC,OAAO,EAAE,GAAGM,gBAAgB,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAACC,cAAc;IAAA2B,QAAA,gBACb5B,OAAA;MAAA4B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BnB,UAAU,CAACS,GAAG,CAAEE,QAAQ,iBACvBxB,OAAA,CAACI,cAAc;MAEb6B,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACa,QAAQ,CAAE;MAC1CjB,MAAM,EAAEG,gBAAgB,KAAKc,QAAS;MAAAI,QAAA,EAErCJ;IAAQ,GAJJA,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKC,CACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAACpB,EAAA,CA3BQH,KAAK;AAAAyB,GAAA,GAALzB,KAAK;AA6Bd,eAAeA,KAAK;;AASpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAN,EAAA,EAAAK,GAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}