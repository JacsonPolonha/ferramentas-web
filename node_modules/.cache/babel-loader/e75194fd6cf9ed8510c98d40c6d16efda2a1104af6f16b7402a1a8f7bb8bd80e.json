{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Header from \"./components/Header\";\n// import Aside from \"./components/Aside\";\n// import Footer from \"./components/Footer\";\n// import Home from \"./pages/Home\";\n// import { AppContainer, MainLayout } from \"./components/AppLayout\";\n// import { ThemeProvider, createGlobalStyle } from \"styled-components\";\n// import { lightTheme, darkTheme } from \"./theme\";\n\n// const GlobalStyle = createGlobalStyle`\n//   body {\n//     background-color: ${({ theme }) => theme.colors.background};\n//     margin: 0;\n//     font-family: Arial, sans-serif;\n//     color: ${({ theme }) => theme.colors.cardText};\n//     transition: background-color 0.3s, color 0.3s;\n//   }\n// `;\n\n// function App() {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Todas\");\n//   const [searchText, setSearchText] = useState(\"\");\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n\n//   const toggleTheme = () => {\n//     setIsDarkMode((prev) => !prev);\n//   };\n\n//   return (\n//     <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n//       <GlobalStyle />\n//       <AppContainer>\n//         <Header\n//           searchText={searchText}\n//           onSearch={setSearchText}\n//           toggleTheme={toggleTheme}\n//           isDarkMode={isDarkMode}\n//         />\n//         <MainLayout>\n//           <Aside\n//             selectedCategory={selectedCategory}\n//             onCategorySelect={setSelectedCategory}\n//           />\n//           <Home selectedCategory={selectedCategory} searchText={searchText} />\n//         </MainLayout>\n//         <Footer />\n//       </AppContainer>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import Header from \"./components/Header\";\n// import Aside from \"./components/Aside\";\n// import Footer from \"./components/Footer\";\n// import Home from \"./pages/Home\";\n// import { AppContainer, MainLayout } from \"./components/AppLayout\";\n// import { ThemeProvider } from \"styled-components\";\n// import { theme } from \"./theme\";\n\n// function App() {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Todas\");\n//   const [searchText, setSearchText] = useState(\"\");\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <AppContainer>\n//         <Header searchText={searchText} onSearch={setSearchText} />\n//         <MainLayout>\n//           <Aside\n//             selectedCategory={selectedCategory}\n//             onCategorySelect={setSelectedCategory}\n//           />\n//           <Home selectedCategory={selectedCategory} searchText={searchText} />\n//         </MainLayout>\n//         <Footer />\n//       </AppContainer>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/home/jacson/ferramentas/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import Header from \"./components/Header\";\n// import Aside from \"./components/Aside\";\n// import Footer from \"./components/Footer\";\n// import Home from \"./pages/Home\";\n// import { AppContainer, MainLayout } from \"./components/AppLayout\";\n// import { ThemeProvider, createGlobalStyle } from \"styled-components\";\n// import { lightTheme, darkTheme } from \"./theme\";\n\n// const GlobalStyle = createGlobalStyle`\n//   body {\n//     background-color: ${({ theme }) => theme.colors.background};\n//     margin: 0;\n//     font-family: Arial, sans-serif;\n//     color: ${({ theme }) => theme.colors.cardText};\n//     transition: background-color 0.3s, color 0.3s;\n//   }\n// `;\n\n// function App() {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Todas\");\n//   const [searchText, setSearchText] = useState(\"\");\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n\n//   const toggleTheme = () => {\n//     setIsDarkMode((prev) => !prev);\n//   };\n\n//   return (\n//     <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n//       <GlobalStyle />\n//       <AppContainer>\n//         <Header\n//           searchText={searchText}\n//           onSearch={setSearchText}\n//           toggleTheme={toggleTheme}\n//           isDarkMode={isDarkMode}\n//         />\n//         <MainLayout>\n//           <Aside\n//             selectedCategory={selectedCategory}\n//             onCategorySelect={setSelectedCategory}\n//           />\n//           <Home selectedCategory={selectedCategory} searchText={searchText} />\n//         </MainLayout>\n//         <Footer />\n//       </AppContainer>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\n\n\n\n// import React, { useState } from \"react\";\n// import Header from \"./components/Header\";\n// import Aside from \"./components/Aside\";\n// import Footer from \"./components/Footer\";\n// import Home from \"./pages/Home\";\n// import { AppContainer, MainLayout } from \"./components/AppLayout\";\n// import { ThemeProvider } from \"styled-components\";\n// import { theme } from \"./theme\";\n\n\n// function App() {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Todas\");\n//   const [searchText, setSearchText] = useState(\"\");\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <AppContainer>\n//         <Header searchText={searchText} onSearch={setSearchText} />\n//         <MainLayout>\n//           <Aside\n//             selectedCategory={selectedCategory}\n//             onCategorySelect={setSelectedCategory}\n//           />\n//           <Home selectedCategory={selectedCategory} searchText={searchText} />\n//         </MainLayout>\n//         <Footer />\n//       </AppContainer>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}