{"ast":null,"code":"var _jsxFileName = \"/home/jacson/ferramentas/src/components/Aside.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AsideContainer = styled.aside`\n  width: 200px;\n  background-color: #f4f4f4;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  padding: 10px;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    position: fixed;\n    top: 0;\n    left: ${({\n  isOpen\n}) => isOpen ? \"0\" : \"-220px\"};\n    transition: left 0.3s ease;\n    height: 100vh;\n    z-index: 1500;\n    box-shadow: ${({\n  isOpen\n}) => isOpen ? \"2px 0 5px rgba(0,0,0,0.3)\" : \"none\"};\n  }\n`;\n_c = AsideContainer;\nconst Overlay = styled.div`\n  display: ${({\n  isOpen\n}) => isOpen ? \"block\" : \"none\"};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.3);\n  z-index: 1000;\n`;\n_c2 = Overlay;\nconst CategoryButton = styled.button`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border: none;\n  background-color: ${({\n  active,\n  theme\n}) => active ? theme.colors.categoryActiveBg : \"#ddd\"};\n  color: ${({\n  active,\n  theme\n}) => active ? theme.colors.categoryActiveText : \"#000\"};\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${({\n  active,\n  theme\n}) => active ? theme.colors.buttonHoverBg : \"#ccc\"};\n  }\n`;\n_c3 = CategoryButton;\nconst ToggleButton = styled.button`\n  display: none;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  z-index: 2000;\n  background-color: #333;\n  color: white;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n_c4 = ToggleButton;\nfunction Aside({\n  selectedCategory,\n  onCategorySelect\n}) {\n  _s();\n  const [categories, setCategories] = useState([\"Todas\"]);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(\"/db.json\").then(response => response.json()).then(data => {\n      const uniqueCategories = [...new Set(data.map(item => item.category))];\n      setCategories([\"Todas\", ...uniqueCategories]);\n    }).catch(error => console.error(\"Erro ao carregar categorias:\", error));\n  }, []);\n  const handleCategoryClick = category => {\n    onCategorySelect(category);\n    setIsOpen(false); // Fecha o menu ao escolher uma categoria no mobile\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      onClick: () => setIsOpen(true),\n      children: \"\\u2630 Categorias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      isOpen: isOpen,\n      onClick: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsideContainer, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filtrar por Categoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n        onClick: () => handleCategoryClick(category),\n        active: selectedCategory === category,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Aside, \"/Zm0rG95mTPJAjefpq6pvt22AdY=\");\n_c5 = Aside;\nexport default Aside;\n\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n\n// const AsideContainer = styled.aside`\n//   width: 200px;\n//   background-color: #f4f4f4;\n//   position: sticky;\n//   top: 0;\n//   height: 100vh;\n//   padding: 10px;\n// `;\n\n// // const CategoryButton = styled.button`\n// //   width: 100%;\n// //   padding: 8px;\n// //   margin-bottom: 5px;\n// //   cursor: pointer;\n// //   border: none;\n// //   background-color: ${(props) => (props.active ? \"#aaa\" : \"#ddd\")};\n// //   transition: background-color 0.3s;\n// //   font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\n\n// //   &:hover {\n// //     background-color: #ccc;\n// //   }\n// // `;\n\n// const CategoryButton = styled.button`\n//   width: 100%;\n//   padding: 8px;\n//   margin-bottom: 5px;\n//   cursor: pointer;\n//   border: none;\n//   background-color: ${({ active, theme }) =>\n//     active ? theme.colors.categoryActiveBg : \"#ddd\"};\n//   color: ${({ active, theme }) =>\n//     active ? theme.colors.categoryActiveText : \"#000\"};\n//   transition: background-color 0.3s;\n\n//   &:hover {\n//     background-color: ${({ active, theme }) =>\n//       active ? theme.colors.buttonHoverBg : \"#ccc\"};\n//   }\n// `;\n\n// function Aside({ selectedCategory, onCategorySelect }) {\n//   const [categories, setCategories] = useState([\"Todas\"]);\n\n//   useEffect(() => {\n//     fetch(\"/db.json\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         const uniqueCategories = [...new Set(data.map((item) => item.category))];\n//         setCategories([\"Todas\", ...uniqueCategories]);\n//       })\n//       .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n//   }, []);\n\n//   return (\n//     <AsideContainer>\n//       <h3>Filtrar por Categoria</h3>\n//       {categories.map((category) => (\n//         <CategoryButton\n//           key={category}\n//           onClick={() => onCategorySelect(category)}\n//           active={selectedCategory === category}\n//         >\n//           {category}\n//         </CategoryButton>\n//       ))}\n//     </AsideContainer>\n//   );\n// }\n\n// export default Aside;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AsideContainer\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"CategoryButton\");\n$RefreshReg$(_c4, \"ToggleButton\");\n$RefreshReg$(_c5, \"Aside\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","AsideContainer","aside","isOpen","_c","Overlay","div","_c2","CategoryButton","button","active","theme","colors","categoryActiveBg","categoryActiveText","buttonHoverBg","_c3","ToggleButton","_c4","Aside","selectedCategory","onCategorySelect","_s","categories","setCategories","setIsOpen","fetch","then","response","json","data","uniqueCategories","Set","map","item","category","catch","error","console","handleCategoryClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/home/jacson/ferramentas/src/components/Aside.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst AsideContainer = styled.aside`\n  width: 200px;\n  background-color: #f4f4f4;\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  padding: 10px;\n  overflow-y: auto;\n\n  @media (max-width: 768px) {\n    position: fixed;\n    top: 0;\n    left: ${({ isOpen }) => (isOpen ? \"0\" : \"-220px\")};\n    transition: left 0.3s ease;\n    height: 100vh;\n    z-index: 1500;\n    box-shadow: ${({ isOpen }) => (isOpen ? \"2px 0 5px rgba(0,0,0,0.3)\" : \"none\")};\n  }\n`;\n\nconst Overlay = styled.div`\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.3);\n  z-index: 1000;\n`;\n\nconst CategoryButton = styled.button`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border: none;\n  background-color: ${({ active, theme }) =>\n    active ? theme.colors.categoryActiveBg : \"#ddd\"};\n  color: ${({ active, theme }) =>\n    active ? theme.colors.categoryActiveText : \"#000\"};\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${({ active, theme }) =>\n      active ? theme.colors.buttonHoverBg : \"#ccc\"};\n  }\n`;\n\nconst ToggleButton = styled.button`\n  display: none;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  z-index: 2000;\n  background-color: #333;\n  color: white;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nfunction Aside({ selectedCategory, onCategorySelect }) {\n  const [categories, setCategories] = useState([\"Todas\"]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(\"/db.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const uniqueCategories = [...new Set(data.map((item) => item.category))];\n        setCategories([\"Todas\", ...uniqueCategories]);\n      })\n      .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n  }, []);\n\n  const handleCategoryClick = (category) => {\n    onCategorySelect(category);\n    setIsOpen(false); // Fecha o menu ao escolher uma categoria no mobile\n  };\n\n  return (\n    <>\n      {/* Botão de abrir/fechar Aside no Mobile */}\n      <ToggleButton onClick={() => setIsOpen(true)}>☰ Categorias</ToggleButton>\n\n      {/* Fundo escuro quando o menu estiver aberto */}\n      <Overlay isOpen={isOpen} onClick={() => setIsOpen(false)} />\n\n      <AsideContainer isOpen={isOpen}>\n        <h3>Filtrar por Categoria</h3>\n        {categories.map((category) => (\n          <CategoryButton\n            key={category}\n            onClick={() => handleCategoryClick(category)}\n            active={selectedCategory === category}\n          >\n            {category}\n          </CategoryButton>\n        ))}\n      </AsideContainer>\n    </>\n  );\n}\n\nexport default Aside;\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n\n// const AsideContainer = styled.aside`\n//   width: 200px;\n//   background-color: #f4f4f4;\n//   position: sticky;\n//   top: 0;\n//   height: 100vh;\n//   padding: 10px;\n// `;\n\n// // const CategoryButton = styled.button`\n// //   width: 100%;\n// //   padding: 8px;\n// //   margin-bottom: 5px;\n// //   cursor: pointer;\n// //   border: none;\n// //   background-color: ${(props) => (props.active ? \"#aaa\" : \"#ddd\")};\n// //   transition: background-color 0.3s;\n// //   font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\n\n// //   &:hover {\n// //     background-color: #ccc;\n// //   }\n// // `;\n\n// const CategoryButton = styled.button`\n//   width: 100%;\n//   padding: 8px;\n//   margin-bottom: 5px;\n//   cursor: pointer;\n//   border: none;\n//   background-color: ${({ active, theme }) =>\n//     active ? theme.colors.categoryActiveBg : \"#ddd\"};\n//   color: ${({ active, theme }) =>\n//     active ? theme.colors.categoryActiveText : \"#000\"};\n//   transition: background-color 0.3s;\n\n//   &:hover {\n//     background-color: ${({ active, theme }) =>\n//       active ? theme.colors.buttonHoverBg : \"#ccc\"};\n//   }\n// `;\n\n// function Aside({ selectedCategory, onCategorySelect }) {\n//   const [categories, setCategories] = useState([\"Todas\"]);\n\n//   useEffect(() => {\n//     fetch(\"/db.json\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         const uniqueCategories = [...new Set(data.map((item) => item.category))];\n//         setCategories([\"Todas\", ...uniqueCategories]);\n//       })\n//       .catch((error) => console.error(\"Erro ao carregar categorias:\", error));\n//   }, []);\n\n//   return (\n//     <AsideContainer>\n//       <h3>Filtrar por Categoria</h3>\n//       {categories.map((category) => (\n//         <CategoryButton\n//           key={category}\n//           onClick={() => onCategorySelect(category)}\n//           active={selectedCategory === category}\n//         >\n//           {category}\n//         </CategoryButton>\n//       ))}\n//     </AsideContainer>\n//   );\n// }\n\n// export default Aside;\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}